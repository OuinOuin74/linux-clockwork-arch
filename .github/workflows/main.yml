name: Build uConsole kernels (CM4 & CM5)

on:
  push:
    paths:
      - 'PKGBUILD'
      - '*.zip'
      - '*.preset'
      - 'config.txt'
      - 'cmdline.txt'
  pull_request:
    paths:
      - 'PKGBUILD'
      - '*.zip'
      - '*.preset'
      - 'config.txt'
      - 'cmdline.txt'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        model: [cm4, cm5]   # Two builds: MODEL=cm4 and MODEL=cm5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # If blobs are in Git LFS, enable this
          lfs: true

      - name: Enable QEMU for arm64 containers
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build (MODEL=${{ matrix.model }})
        uses: addnab/docker-run-action@v3
        with:
          image: agners/archlinuxarm-arm64v8:latest
          options: --platform linux/arm64 -v ${{ github.workspace }}:/work
          run: |
            set -euxo pipefail
            # Ensure pacman is ready (Arch Linux ARM containers)
            pacman-key --init
            pacman-key --populate archlinuxarm || true
            pacman -Sy --noconfirm archlinuxarm-keyring
            # Update and install build deps (no AUR helper)
            pacman -Syu --noconfirm \
              base-devel git ccache unzip bsdtar bc flex bison pahole inetutils kmod util-linux which
            # Create unprivileged build user
            useradd -m build || true
            echo 'build ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/90-build
            chown -R build:build /work
            # Use ccache (stored in repo to persist across steps of this job)
            su build -c 'mkdir -p /work/.ccache'
            export CCACHE_DIR=/work/.ccache
            # Build with your PKGBUILD (reads MODEL in env)
            su build -c 'cd /work && env MODEL=${{ matrix.model }} makepkg -sc --noconfirm'
            # Collect artifacts
            mkdir -p /work/out/${{ matrix.model }}
            mv /work/*.pkg.tar.* /work/out/${{ matrix.model }}/ || true
            # Save a tiny log (optional)
            : > /work/out/${{ matrix.model }}/build-${{ matrix.model }}.log

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.model }}-packages
          path: |
            out/${{ matrix.model }}/*.pkg.tar.*
            out/${{ matrix.model }}/*.log
