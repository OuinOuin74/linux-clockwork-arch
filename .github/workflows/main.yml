name: Build uConsole kernels (CM4 & CM5) with run-on-arch

on:
  push:
    paths:
      - 'PKGBUILD'
      - 'patches/**'
      - 'drivers/**'
      - 'overlays/**'
      - '*.zip'
      - '*.preset'
      - 'config.txt'
      - 'cmdline.txt'
  pull_request:
    paths:
      - 'PKGBUILD'
      - 'patches/**'
      - 'drivers/**'
      - 'overlays/**'
      - '*.zip'
      - '*.preset'
      - 'config.txt'
      - 'cmdline.txt'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        model: [cm4, cm5]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      # Run commands in an aarch64 container based on Arch Linux ARM
      - name: Build (MODEL=${{ matrix.model }})
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: aarch64
          distro: archarm_latest  # Arch Linux ARM rootfs, supported combo
          githubToken: ${{ github.token }}  # speeds up caching (recommended)
          dockerRunArgs: |
            -v ${{ github.workspace }}:/work
          setup: |
            # Create artifacts dir ahead of time (mounted via dockerRunArgs above)
            mkdir -p "${PWD}/out/${{ matrix.model }}"
          install: |
            # Inside the container: install only official packages (no AUR helper)
            pacman -Sy --noconfirm archlinuxarm-keyring || true
            pacman -Syu --noconfirm base-devel git ccache unzip bsdtar bc flex bison pahole inetutils kmod util-linux which
          run: |
            set -euxo pipefail
            cd /work
            # Non-root makepkg: create a build user (makepkg refuses root)
            id -u build >/dev/null 2>&1 || useradd -m build
            echo 'build ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/90-build
            chown -R build:build /work
            # Optional ccache to speed subsequent builds
            sudo -u build mkdir -p /work/.ccache
            # Build kernel for selected model (your PKGBUILD reads MODEL)
            sudo -u build env CCACHE_DIR=/work/.ccache MODEL=${{ matrix.model }} makepkg -sc --noconfirm
            # Collect artifacts
            mv /work/*.pkg.tar.* /work/out/${{ matrix.model }}/ || true
            : > /work/out/${{ matrix.model }}/build-${{ matrix.model }}.log

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.model }}-packages
          path: |
            out/${{ matrix.model }}/*.pkg.tar.*
            out/${{ matrix.model }}/*.log
