disable_cma() {
  if [[ -f /boot/config.txt && $(grep '^cma' /boot/config.txt) != '' ]]; then
    cat <<END

>>> You appear to have dynamic memory (CMA) enabled, which is currently broken
    in newer kernels and will cause many issues if left enabled. Disabling that
    for you now.

END
    sed -i 's/^cma_/#cma_/g' /boot/config.txt
  fi
}

correct_fstab() {
  # starting with v5.10.y, fstab requires a padded zero in the path to /boot
  if [[ -f /etc/fstab ]]; then
    if grep -q mmcblk1p1 /etc/fstab; then
      sed -i 's/mmcblk1p1/mmcblk0p1/' /etc/fstab
    fi
  fi
}

# Set root=PARTUUID in /boot/cmdline.txt
patch_cmdline() {
  local cmd="/boot/cmdline.txt" dev partuuid

  dev="$(findmnt -no SOURCE /)" || {
    echo "!! Could not detect root device. Please set root=PARTUUID manually in $cmd"
    return 0
  }

  partuuid="$(blkid -s PARTUUID -o value "$dev" 2>/dev/null)" || {
    echo "!! Could not detect PARTUUID for $dev. Please set it manually in $cmd"
    return 0
  }

  [ -f "$cmd" ] || {
    echo "!! $cmd not found. Please edit it manually with the correct root=PARTUUID"
    return 0
  }

  if grep -q '\broot=' "$cmd"; then
    sed -E -i "s#\broot=[^ ]+#root=PARTUUID=${partuuid}#g" "$cmd"
  else
    sed -i "1s#^#root=PARTUUID=${partuuid} #" "$cmd"
  fi

  echo ":: root=PARTUUID=${partuuid} set in $cmd"
}

post_install () {
  post_upgrade
}

post_upgrade() {
  correct_fstab
  disable_cma
  patch_cmdline

  if grep "^[^#]*[[:space:]]/boot" etc/fstab 2>&1 >/dev/null; then
    if ! grep "[[:space:]]/boot" etc/mtab 2>&1 >/dev/null; then
      cat <<END

>>> WARNING: /boot appears to be a separate partition but is not mounted.
    You probably just broke your system. Congratulations.

END
    fi
  fi
}

post_remove() {
  rm -f boot/initramfs-linux.img
}
